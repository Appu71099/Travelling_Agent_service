package com.travelling.travel_planner.service;

import java.util.List;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.reactive.function.client.WebClient;
import org.springframework.web.reactive.function.client.WebClientResponseException;

import com.fasterxml.jackson.databind.JsonNode;
import com.travelling.travel_planner.dto.TravelRequest;
import com.travelling.travel_planner.dto.TravelResponse;

@Service
public class TravelPlanService {

	private static final Logger logger = LoggerFactory.getLogger(TravelPlanService.class);

    @Autowired
    private WebClient openAIWebClient;

//    public TravelResponse generatePlan(TravelRequest request) {
//        TravelResponse response = new TravelResponse();
//
//        try {
//            String prompt = buildPrompt(request);
//
//            Map<String, Object> body = Map.of(
//                "model", "gpt-3.5-turbo",
//                "messages", List.of(
//                    Map.of("role", "system", "content", "You are a helpful travel assistant."),
//                    Map.of("role", "user", "content", prompt)
//                )
//            );
//
//            String chatResponse = openAIWebClient.post()
//                .bodyValue(body)
//                .retrieve()
//                .bodyToMono(JsonNode.class)
//                .map(json -> json.at("/choices/0/message/content").asText())
//                .block();
//
//            response.setItinerary(chatResponse);
//            response.setNotes("Plan generated by ChatGPT");
//
//        } catch (WebClientResponseException e) {
//            logger.error("Error from OpenAI API: Status code {}, Body: {}", e.getRawStatusCode(), e.getResponseBodyAsString(), e);
//            response.setItinerary("Unable to generate travel plan at the moment.");
//            response.setNotes("Error: " + e.getStatusCode());
//
//        } catch (Exception e) {
//            logger.error("Unexpected error while generating travel plan", e);
//            response.setItinerary("Something went wrong while generating your plan.");
//            response.setNotes("An unexpected error occurred.");
//        }
//
//        return response;
//    }

    private String buildPrompt(TravelRequest request) {
        return String.format(
            "Create a %d-day travel itinerary for %s that includes places and activities related to: %s.",
            request.getDays(),
            request.getDestination(),
            String.join(", ", request.getInterests())
        );
    }
	
}
